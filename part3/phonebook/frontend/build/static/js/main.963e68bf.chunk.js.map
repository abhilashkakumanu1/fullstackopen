{"version":3,"sources":["Filter.js","PersonForm.js","Persons.js","Notification.js","services/phonebook.js","App.js","index.js"],"names":["Filter","searchTerm","handleSearchChange","value","onChange","PersonForm","props","addName","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","type","Persons","persons","onDelete","map","person","name","number","onClick","id","Notification","message","className","url","services","getAll","axios","get","then","res","data","create","newObject","post","deletePerson","delete","update","put","App","useState","setPersons","setNewName","setNewNumber","setSearchTerm","notification","setNotification","useEffect","response","event","target","preventDefault","matchingPerson","filter","toLowerCase","window","confirm","updatedPersons","setTimeout","catch","err","console","log","includes","render","document","getElementById"],"mappings":"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","file":"static/js/main.963e68bf.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Filter({ searchTerm, handleSearchChange }) {\n  return (\n    <div>\n      filter shown with\n      <input value={searchTerm} onChange={handleSearchChange} />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function PersonForm(props) {\n  const {\n    addName,\n    newName,\n    newNumber,\n    handleNameChange,\n    handleNumberChange,\n  } = props;\n  return (\n    <form onSubmit={addName}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n}\n","import React from \"react\";\n\nexport default function Persons({ persons, onDelete }) {\n  return (\n    <>\n      {persons.map((person) => (\n        <p key={person.id}>\n          {person.name} {person.number}{\" \"}\n          <button onClick={() => onDelete(person.id)}>delete</button>\n        </p>\n      ))}\n    </>\n  );\n}\n","const Notification = ({ type, message }) => {\n  if (message === null) {\n    return null;\n  } else if (type === \"success\") {\n    return <div className=\"success notification\">{message}</div>;\n  }\n  return <div className=\"error notification\">{message}</div>;\n};\n\nexport default Notification;\n","import axios from \"axios\";\n\nconst url = `/api/persons`;\n\nconst getAll = () => {\n  return axios.get(url).then((res) => res.data);\n};\n\nconst create = (newObject) => {\n  return axios.post(url, newObject).then((res) => res.data);\n};\n\nconst deletePerson = (id) => {\n  return axios.delete(`${url}/${id}`);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${url}/${id}`, newObject).then((res) => res.data);\n};\nconst services = {\n  getAll,\n  create,\n  deletePerson,\n  update,\n};\n\nexport default services;\n","import React, { useState, useEffect } from \"react\";\nimport \"./index.css\";\n\nimport Filter from \"./Filter\";\nimport PersonForm from \"./PersonForm\";\nimport Persons from \"./Persons\";\nimport Notification from \"./Notification\";\n\nimport services from \"./services/phonebook\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [notification, setNotification] = useState({ type: \"\", message: null });\n\n  useEffect(() => {\n    services.getAll().then((response) => setPersons(response));\n  }, []);\n\n  const addName = (event) => {\n    event.preventDefault();\n\n    const matchingPerson = persons.filter(\n      (person) => person.name.toLowerCase() === newName.toLowerCase()\n    )[0];\n\n    // Update existing user number\n    if (matchingPerson) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        services\n          .update(matchingPerson.id, { name: newName, number: newNumber })\n          .then((res) => {\n            const updatedPersons = persons.map((person) => {\n              if (person.name.toLowerCase() !== newName.toLowerCase()) {\n                return person;\n              }\n              return res;\n            });\n            setPersons(updatedPersons);\n            setNewName(\"\");\n            setNewNumber(\"\");\n\n            setNotification({\n              type: \"success\",\n              message: `Updated ${newName}'s number`,\n            });\n            setTimeout(() => {\n              setNotification({ type: \"\", message: null });\n            }, 5000);\n          })\n          .catch((err) => console.log(err));\n      }\n    }\n    // Adding new user\n    else {\n      services\n        .create({ name: newName, number: newNumber })\n        .then((res) => {\n          setPersons([...persons, res]);\n          setNewName(\"\");\n          setNewNumber(\"\");\n\n          setNotification({\n            type: \"success\",\n            message: `Added ${newName}`,\n          });\n          setTimeout(() => {\n            setNotification({ type: \"\", message: null });\n          }, 5000);\n        })\n        .catch((err) => {\n          setNewName(\"\");\n          setNewNumber(\"\");\n\n          setNotification({\n            type: \"error\",\n            message: err.message,\n          });\n          setTimeout(() => {\n            setNotification({ type: \"\", message: null });\n          }, 5000);\n        });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const onDelete = (id) => {\n    const person = persons.filter((person) => person.id === id)[0];\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      services\n        .deletePerson(id)\n        .then(() => {\n          setPersons(persons.filter((person) => person.id !== id));\n        })\n        .catch((err) => {\n          setNotification({\n            type: \"error\",\n            message: `Information of ${person.name} has already been removed from the server`,\n          });\n          setTimeout(() => {\n            setNotification({ type: \"\", message: null });\n          }, 5000);\n          services.getAll().then((response) => setPersons(response)); // Updating the list again\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification type={notification.type} message={notification.message} />\n      <Filter {...{ searchTerm, handleSearchChange }} />\n      <h2>add a new contact</h2>\n      <PersonForm\n        {...{\n          addName,\n          newName,\n          newNumber,\n          handleNameChange,\n          handleNumberChange,\n        }}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons.filter((person) =>\n          person.name.toLowerCase().includes(searchTerm.toLowerCase())\n        )}\n        onDelete={onDelete}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}